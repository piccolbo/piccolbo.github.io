<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0041)http://angel.net/~nic/passwd.current.html -->
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<title>
			Password generator
		</title>
		<link rel="StyleSheet" href="./Password generator 2014_files/main.css" type="text/css">
		<meta name="apple-mobile-web-app-capable" content="yes">
		<script language="JavaScript">

			/*
			 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
			 * in FIPS PUB 180-1
			 * Version 2.1 Copyright Paul Johnston 2000 - 2002.
			 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
			 * Distributed under the BSD License
			 * See http://pajhome.org.uk/crypt/md5 for details.
			 */

			var b64pad  = "";
			var chrsz   = 8;

			function b64_sha1(s){return binb2b64(core_sha1(str2binb(s),s.length * chrsz));}

			function core_sha1(x, len)
			{
			  x[len >> 5] |= 0x80 << (24 - len % 32);
			  x[((len + 64 >> 9) << 4) + 15] = len;

			  var w = Array(80);
			  var a =  1732584193;
			  var b = -271733879;
			  var c = -1732584194;
			  var d =  271733878;
			  var e = -1009589776;

			  for(var i = 0; i < x.length; i += 16)
			  {
			    var olda = a;
			    var oldb = b;
			    var oldc = c;
			    var oldd = d;
			    var olde = e;

			    for(var j = 0; j < 80; j++)
			    {
			      if(j < 16) w[j] = x[i + j];
			      else w[j] = rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);
			      var t = safe_add(safe_add(rol(a, 5), sha1_ft(j, b, c, d)),
			                       safe_add(safe_add(e, w[j]), sha1_kt(j)));
			      e = d;
			      d = c;
			      c = rol(b, 30);
			      b = a;
			      a = t;
			    }

			    a = safe_add(a, olda);
			    b = safe_add(b, oldb);
			    c = safe_add(c, oldc);
			    d = safe_add(d, oldd);
			    e = safe_add(e, olde);
			  }
			  return Array(a, b, c, d, e);

			}

			function sha1_ft(t, b, c, d)
			{
			  if(t < 20) return (b & c) | ((~b) & d);
			  if(t < 40) return b ^ c ^ d;
			  if(t < 60) return (b & c) | (b & d) | (c & d);
			  return b ^ c ^ d;
			}

			function sha1_kt(t)
			{
			  return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :
			         (t < 60) ? -1894007588 : -899497514;
			}

			function safe_add(x, y)
			{
			  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
			  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
			  return (msw << 16) | (lsw & 0xFFFF);
			}

			function rol(num, cnt)
			{
			  return (num << cnt) | (num >>> (32 - cnt));
			}

			function str2binb(str)
			{
			  var bin = Array();
			  var mask = (1 << chrsz) - 1;
			  for(var i = 0; i < str.length * chrsz; i += chrsz)
			    bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (24 - i%32);
			  return bin;
			}

			function binb2b64(binarray)
			{
			  var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
			  var str = "";
			  for(var i = 0; i < binarray.length * 4; i += 3)
			  {
			    var triplet = (((binarray[i   >> 2] >> 8 * (3 -  i   %4)) & 0xFF) << 16)
			                | (((binarray[i+1 >> 2] >> 8 * (3 - (i+1)%4)) & 0xFF) << 8 )
			                |  ((binarray[i+2 >> 2] >> 8 * (3 - (i+2)%4)) & 0xFF);
			    for(var j = 0; j < 4; j++)
			    {
			      if(i * 8 + j * 6 > binarray.length * 32) str += b64pad;
			      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);
			    }
			  }
			  return str;
			}

		</script>
	</head>
	<body>
		<ul id="menu"><li><a href="http://angel.net/~nic/">Nic's tricks</a></li></ul>
		<form class="callout" name="f" method="POST" onsubmit="f.password.value = b64_sha1(f.master.value+&#39;:&#39;+ f.site.value).substr(0,13) + &#39;@1a&#39;; f.password.focus(); f.password.select(); return false;">
			<table>
				<tbody><tr>
					<td>Your master password</td>
					<td>
						<input name="master" type="password" tabindex="1">
						<script language="JavaScript">document.f.master.focus()</script>
					</td>
				</tr>
				<tr>
					<td>Site name</td>
					<td><input name="site" autocorrect="off" autocapitalize="off" tabindex="2"></td>
				</tr>
				<tr>
					<td colspan="2"><input type="submit" value="Generate"></td>
				</tr>
				<tr class="output">
					<td>Generated password</td>
					<td><input name="password" autocorrect="off" autocapitalize="off" tabindex="3"></td>
				</tr>
			</tbody></table>
		</form>
		<h1>What is this?</h1>
		<div class="callout" style="font-size: smaller"><b>11 Apr 2014</b> • Since <a href="http://heartbleed.com/">the Heartbleed bug</a> has potentially exposed HTTPS request content at many Web sites, it's a good idea to change your passwords. I'm taking this opportunity to update this password generator by making two changes: <ul style="margin: .5em 2em"><li>passwords will now be 16 characters long for increased security</li><li>passwords will now end in "@1a" to satisfy those sites that require a "special character" as well as a number and letter.</li></ul>Since it is never sent anywhere, and this site doesn't use HTTPS, your master password has not been exposed; however, since the basic algorithm this page uses has not changed, passwords generated with the same master password will start with the same 8 characters, so it's better if you pick a new one.<br><br>The previous version of this page is available <a href="http://angel.net/~nic/passwd.sha1.1a.html">here</a>.</div>
		<p><em>I hate passwords.</em> I mean, I don't mind having really important ones be made-up and memorized but what about all those e-commerce and community sites that want me to create accounts? I end up using the same password at all of them and then I feel stupid knowing that one SQL Server exploit or disgruntled admin could cost me my whole identity.</p>
		<p>So, this is a little Javascript program that will generate a SHA-1 hash from each site's name. The idea is that you choose one master password to secure all your others, and then generate passwords for each site, server, router, &amp;c. by putting a completely obvious name for that resource in the "Site name" field.</p>
		<p>Then just hit <i>return</i> and copy your new password so you can paste it into whatever site you're registering at. It'll be different for every site, and undiscoverable by anyone who doesn't know your master password — but you can always retrieve it by simply using this form again.</p>
		<p>(Note that all this is done by your browser running the program that's in the source of this page; nothing is passed back to my server. You can make your own local copy of this page, use it off-line, &amp;c.)</p>

		<p class="callout"><a href="http://angel.net/~nic/passwdlet.current.html">Here's a bookmarklet version</a>, which you can drag to your bookmark list to keep handy. (This now hashes the domain instead of the hostname, since so many sites use different servers for registration and login.)</p>
		<p class="callout"><a href="http://angel.net/~nic/passwd.sha1.1a.html">Here's an older version</a> of this page that generated passwords with only ten characters that ended in "1a" not "@1a".</p>
	

</body></html>